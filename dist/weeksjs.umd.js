!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e=e||self).weeksjs=r()}(this,function(){"use strict";var n=["sunday","monday","tuesday","wednesday","thursday","friday","saturday","holiday"],u=[1,2,4,8,16,32,64,128];return{_calc:function(e){return e.reduce(function(e,r){var t=n.indexOf(String(r).toLowerCase());if(-1===t)throw new Error("Weeksjs::The given day is not supported\nVALUE INCORRECT="+r);return e+=u[t]},0)},_dayWeeks:function(){return n.reduce(function(e,r,t){return e[r=String(r)]={bin:u[t]},e[r].value=!0,e},{})},getDaysOfWeek:function(){return n.map(function(e,r){return{day:e,value:u[r]}})},intToWeek:function(e,r){if(e=Number(e),!Number.isInteger(e)||255<e||e<0)throw new Error("Week.js::Value must be in the range 0 to 255");var n=(255-e>>>0).toString(2).split("").reverse(),t=Object.keys(this._dayWeeks()).reduce(function(e,r,t){return e[r]=!parseInt(n[t]),e},{});return r&&r.array?Object.keys(t).map(function(e){var r={};return r.day=e,r.value=t[e],r}):t},weekToInt:function(r){if(Array.isArray(r))return this._calc(r);if("object"==typeof r)return this._calc(Object.keys(r).filter(function(e){return r[e]}));throw new Error("Weeksjs::The given data type is not valid")}}});

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).weeksjs=t()}(this,function(){"use strict";var r=["sunday","monday","tuesday","wednesday","thursday","friday","saturday","holiday"],i=[1,2,4,8,16,32,64,128];return{_calc:function(e){return e.reduce(function(e,t){var n=r.indexOf(String(t).toLowerCase());if(-1===n)throw new Error("Weeksjs::The given day is not supported\nVALUE INCORRECT="+t);return e+=i[n]},0)},_dayWeeks:function(){return r.reduce(function(e,t,n){return e[t=String(t)]={bin:i[n]},e[t].value=!0,e},{})},getDaysOfWeek:function(){return r.map(function(e,t){return{day:e,value:i[t]}})},_intToWeek:function(e,t){if(e=Number(e),!Number.isInteger(e)||255<e||e<0)throw new Error("Week.js::Value must be in the range 0 to 255");var r=(255-e>>>0).toString(2).split("").reverse(),n=Object.keys(this._dayWeeks()).reduce(function(e,t,n){return e[t]=!parseInt(r[n]),e},{});return t&&t.array?Object.keys(n).map(function(e){var t={};return t.day=e,t.value=n[e],t}):n},_weekToInt:function(t){if(Array.isArray(t))return this._calc(t);if("object"==typeof t)return this._calc(Object.keys(t).filter(function(e){return t[e]}));throw new Error("Weeksjs::The given data type is not valid")},encode:function(e){return this._intToWeek(e)},decode:function(e){return this._weekToInt(e)}}});

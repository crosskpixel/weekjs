var days=["sunday","monday","tuesday","wednesday","thursday","friday","saturday","holiday"],binValue=[1,2,4,8,16,32,64,128],main={_calc:function(e){return e.reduce(function(e,r){var n=days.indexOf(String(r).toLowerCase());if(-1===n)throw new Error("Weeksjs::The given day is not supported\nVALUE INCORRECT="+r);return e+=binValue[n]},0)},_dayWeeks:function(){return days.reduce(function(e,r,n){return r=String(r),e[r]={bin:binValue[n]},e[r].value=!0,e},{})},getDaysOfWeek:function(){return days.map(function(e,r){return{day:e,value:binValue[r]}})},intToWeek:function(e,r){if(e=Number(e),!Number.isInteger(e)||e>255||e<0)throw new Error("Week.js::Value must be in the range 0 to 255");var n=(255-e>>>0).toString(2).split("").reverse(),t=Object.keys(this._dayWeeks()).reduce(function(e,r,t){return e[r]=!parseInt(n[t]),e},{});return r&&r.array?Object.keys(t).map(function(e){var r={};return r.day=e,r.value=t[e],r}):t},weekToInt:function(e){if(Array.isArray(e))return this._calc(e);if("object"==typeof e)return this._calc(Object.keys(e).filter(function(r){return e[r]}));throw new Error("Weeksjs::The given data type is not valid")}};export default main;
